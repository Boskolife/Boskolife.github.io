{"version":3,"sources":["main.js"],"names":["ininSwiper","initBurger","destroySlidersOnResize","selector","width","obj","moreThan","init","win","window","sliderSelector","document","querySelector","swiper","Swiper","toggleInit","neededWidth","innerWidth","classList","contains","destroy","forEach","evt","addEventListener","spaceBetween","direction","navigation","nextEl","prevEl","breakpoints","burger","menu","menuContainer","toggle","body"],"mappings":";;;;;;;;AAAAA,UAAU;AACVC,UAAU;;AAEV,SAASD,UAAT,GAAsB;AAClB,WAASE,sBAAT,CAAgCC,QAAhC,EAA0CC,KAA1C,EAAiDC,GAAjD,EAAsDC,QAAtD,EAAgE;AAC5D,QAAMC,IAAI,qBACHF,GADG,CAAV;;AAIA,QAAMG,GAAG,GAAGC,MAAZ;AACA,QAAMC,cAAc,GAAGC,QAAQ,CAACC,aAAT,CAAuBT,QAAvB,CAAvB;;AACA,QAAI,CAACO,cAAL,EAAqB;AACjB;AACH;;AACD,QAAIG,MAAM,GAAG,IAAIC,MAAJ,CAAWX,QAAX,EAAqBI,IAArB,CAAb;;AAEA,QAAMQ,UAAU,GAAG,SAAbA,UAAa,GAAM;AACrB,UAAMC,WAAW,GAAGV,QAAQ,GACtBE,GAAG,CAACS,UAAJ,IAAkBb,KADI,GAEtBI,GAAG,CAACS,UAAJ,IAAkBb,KAFxB;;AAGA,UAAIY,WAAJ,EAAiB;AACb,YAAI,CAACN,cAAc,CAACQ,SAAf,CAAyBC,QAAzB,CAAkC,oBAAlC,CAAL,EAA8D;AAC1DN,UAAAA,MAAM,GAAG,IAAIC,MAAJ,CAAWX,QAAX,EAAqBI,IAArB,CAAT;AACH;AACJ,OAJD,MAIO,IACHG,cAAc,CAACQ,SAAf,CAAyBC,QAAzB,CAAkC,oBAAlC,CADG,EAEL;AACEN,QAAAA,MAAM,CAACO,OAAP;AACH;AACJ,KAbD;;AAeA,KAAC,MAAD,EAAS,QAAT,EAAmBC,OAAnB,CAA2B,UAACC,GAAD;AAAA,aACvBd,GAAG,CAACe,gBAAJ,CAAqBD,GAArB,EAA0BP,UAA1B,EAAsC,KAAtC,CADuB;AAAA,KAA3B;AAGH;;AAEDb,EAAAA,sBAAsB,CAAC,iBAAD,EAAoB,IAApB,EAA0B;AAC5CsB,IAAAA,YAAY,EAAE,EAD8B;AAE5CC,IAAAA,SAAS,EAAE,YAFiC;AAG5CC,IAAAA,UAAU,EAAE;AACRC,MAAAA,MAAM,EAAE,qBADA;AAERC,MAAAA,MAAM,EAAE;AAFA,KAHgC;AAO5CC,IAAAA,WAAW,EAAE;AACT,YAAM;AACFJ,QAAAA,SAAS,EAAE;AADT;AADG;AAP+B,GAA1B,CAAtB;AAaH;;AAED,SAASxB,UAAT,GAAsB;AAClB,MAAM6B,MAAM,GAAGnB,QAAQ,CAACC,aAAT,CAAuB,cAAvB,CAAf;AACA,MAAMmB,IAAI,GAAGpB,QAAQ,CAACC,aAAT,CAAuB,MAAvB,CAAb;AACA,MAAMoB,aAAa,GAAGrB,QAAQ,CAACC,aAAT,CAAuB,iBAAvB,CAAtB;AAEAkB,EAAAA,MAAM,CAACP,gBAAP,CAAwB,OAAxB,EAAiC,YAAM;AACnCO,IAAAA,MAAM,CAACZ,SAAP,CAAiBe,MAAjB,CAAwB,eAAxB;AACAF,IAAAA,IAAI,CAACb,SAAL,CAAee,MAAf,CAAsB,aAAtB;AACAD,IAAAA,aAAa,CAACd,SAAd,CAAwBe,MAAxB,CAA+B,uBAA/B;AACAtB,IAAAA,QAAQ,CAACuB,IAAT,CAAchB,SAAd,CAAwBe,MAAxB,CAA+B,WAA/B;AACH,GALD;AAMH,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA","sourcesContent":["ininSwiper();\r\ninitBurger();\r\n\r\nfunction ininSwiper() {\r\n    function destroySlidersOnResize(selector, width, obj, moreThan) {\r\n        const init = {\r\n            ...obj,\r\n        };\r\n\r\n        const win = window;\r\n        const sliderSelector = document.querySelector(selector);\r\n        if (!sliderSelector) {\r\n            return;\r\n        }\r\n        let swiper = new Swiper(selector, init);\r\n\r\n        const toggleInit = () => {\r\n            const neededWidth = moreThan\r\n                ? win.innerWidth >= width\r\n                : win.innerWidth <= width;\r\n            if (neededWidth) {\r\n                if (!sliderSelector.classList.contains(\"swiper-initialized\")) {\r\n                    swiper = new Swiper(selector, init);\r\n                }\r\n            } else if (\r\n                sliderSelector.classList.contains(\"swiper-initialized\")\r\n            ) {\r\n                swiper.destroy();\r\n            }\r\n        };\r\n\r\n        [\"load\", \"resize\"].forEach((evt) =>\r\n            win.addEventListener(evt, toggleInit, false)\r\n        );\r\n    }\r\n\r\n    destroySlidersOnResize(\".reviews_swiper\", 9999, {\r\n        spaceBetween: 20,\r\n        direction: \"horizontal\",\r\n        navigation: {\r\n            nextEl: \".swiper-button-next\",\r\n            prevEl: \".swiper-button-prev\",\r\n        },\r\n        breakpoints: {\r\n            1024: {\r\n                direction: \"vertical\",\r\n            },\r\n        },\r\n    });\r\n}\r\n\r\nfunction initBurger() {\r\n    const burger = document.querySelector(\".burger_wrap\");\r\n    const menu = document.querySelector(\".nav\");\r\n    const menuContainer = document.querySelector(\".menu_container\");\r\n\r\n    burger.addEventListener(\"click\", () => {\r\n        burger.classList.toggle(\"burger_active\");\r\n        menu.classList.toggle(\"menu_active\");\r\n        menuContainer.classList.toggle(\"menu_container_active\");\r\n        document.body.classList.toggle(\"body_lock\");\r\n    });\r\n}\r\n\r\n// var slider = document.getElementById(\"slider\");\r\n// var imageBefore = document.querySelector(\".before img\");\r\n// var imageAfter = document.querySelector(\".after img\");\r\n// var containerWidth = slider.parentNode.offsetWidth;\r\n// var sliderWidth = slider.offsetWidth;\r\n// var isDragging = false;\r\n// var startX;\r\n// var startLeft;\r\n\r\n// function updateImageClipPath(percentage) {\r\n//     var clipPathValue =\r\n//         \"polygon(0 0, \" + percentage + \"% 0, \" + percentage + \"% 100%, 0 100%)\";\r\n//     imageBefore.style.clipPath = clipPathValue;\r\n//     imageAfter.style.clipPath = clipPathValue;\r\n// }\r\n\r\n// slider.addEventListener(\"mousedown\", function (event) {\r\n//     event.preventDefault();\r\n//     isDragging = true;\r\n//     slider.classList.add(\"dragging\");\r\n//     startX = event.clientX;\r\n//     startLeft = slider.offsetLeft;\r\n// });\r\n\r\n// document.addEventListener(\"mousemove\", function (event) {\r\n//     if (isDragging) {\r\n//         var offsetX = event.clientX - startX;\r\n//         var newPosition = Math.max(\r\n//             0,\r\n//             Math.min(containerWidth - sliderWidth, startLeft + offsetX)\r\n//         );\r\n//         var percentage = (newPosition / containerWidth) * 100;\r\n//         slider.style.left = newPosition + \"px\";\r\n//         updateImageClipPath(percentage);\r\n//     }\r\n// });\r\n\r\n// document.addEventListener(\"mouseup\", function () {\r\n//     if (isDragging) {\r\n//         isDragging = false;\r\n//         slider.classList.remove(\"dragging\");\r\n//     }\r\n// });\r\n\r\n// // Обновляем путь обрезки изображений при изменении размеров окна\r\n// window.addEventListener(\"resize\", function () {\r\n//     containerWidth = slider.parentNode.offsetWidth;\r\n//     var currentPosition = parseInt(slider.style.left, 10);\r\n//     var percentage = (currentPosition / containerWidth) * 100;\r\n//     updateImageClipPath(percentage);\r\n// });\r\n\r\n// // Инициализация пути обрезки изображений при загрузке страницы\r\n// var initialPosition = containerWidth / 2;\r\n// slider.style.left = initialPosition + \"px\";\r\n// updateImageClipPath(50);"],"file":"main.js"}